/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Generated by https://nickcoutsos.github.io/keymap-editor/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COMBO_TIMEOUT 100

/ {
    behaviors {
        hmt: homerow_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_layer_qwerty {
            bindings = <&to 0>;
            key-positions = <0 2>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        combo_layer_game {
            bindings = <&to 5>;
            key-positions = <0 3>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        combo_layer_chords {
            bindings = <&to 7>;
            key-positions = <0 4>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        combo_layer_colemak {
            bindings = <&to 4>;
            key-positions = <0 5>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_b {
            bindings = <&kp B>;
            key-positions = <1 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_l {
            bindings = <&kp L>;
            key-positions = <13 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_p {
            bindings = <&kp P>;
            key-positions = <2 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_g {
            bindings = <&kp G>;
            key-positions = <1 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_z {
            bindings = <&kp Z>;
            key-positions = <1 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_q {
            bindings = <&kp Q>;
            key-positions = <13 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_x {
            bindings = <&kp X>;
            key-positions = <1 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_v {
            bindings = <&kp V>;
            key-positions = <2 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_m {
            bindings = <&kp M>;
            key-positions = <1 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_y {
            bindings = <&kp Y>;
            key-positions = <4 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_h {
            bindings = <&kp H>;
            key-positions = <16 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_u {
            bindings = <&kp U>;
            key-positions = <15 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_d {
            bindings = <&kp D>;
            key-positions = <13 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_f {
            bindings = <&kp F>;
            key-positions = <4 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_c {
            bindings = <&kp C>;
            key-positions = <16 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_k {
            bindings = <&kp K>;
            key-positions = <14 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_j {
            bindings = <&kp J>;
            key-positions = <13 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lower_w {
            bindings = <&kp W>;
            key-positions = <13 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_forwardshash {
            bindings = <&kp SLASH>;
            key-positions = <2 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <1 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_comma {
            bindings = <&kp COMMA>;
            key-positions = <3 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_minus {
            bindings = <&kp MINUS>;
            key-positions = <3 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_question {
            bindings = <&kp QUESTION>;
            key-positions = <15 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <13 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_r {
            bindings = <&kp LS(R)>;
            key-positions = <37 1>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_s {
            bindings = <&kp LS(S)>;
            key-positions = <37 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_n {
            bindings = <&kp LS(N)>;
            key-positions = <37 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_i {
            bindings = <&kp LS(I)>;
            key-positions = <37 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_a {
            bindings = <&kp LS(A)>;
            key-positions = <37 13>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_o {
            bindings = <&kp LS(O)>;
            key-positions = <37 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_t {
            bindings = <&kp LS(T)>;
            key-positions = <37 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_e {
            bindings = <&kp LS(E)>;
            key-positions = <37 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_b {
            bindings = <&kp LS(B)>;
            key-positions = <37 1 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_l {
            bindings = <&kp LS(L)>;
            key-positions = <37 13 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_p {
            bindings = <&kp LS(P)>;
            key-positions = <37 2 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_g {
            bindings = <&kp LS(G)>;
            key-positions = <37 1 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_z {
            bindings = <&kp LS(Z)>;
            key-positions = <37 1 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_q {
            bindings = <&kp LS(Q)>;
            key-positions = <37 13 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_x {
            bindings = <&kp LS(X)>;
            key-positions = <37 1 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_v {
            bindings = <&kp LS(V)>;
            key-positions = <37 2 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_m {
            bindings = <&kp LS(M)>;
            key-positions = <37 1 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_y {
            bindings = <&kp LS(Y)>;
            key-positions = <37 4 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_h {
            bindings = <&kp LS(H)>;
            key-positions = <37 16 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_u {
            bindings = <&kp LS(U)>;
            key-positions = <37 15 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_d {
            bindings = <&kp LS(D)>;
            key-positions = <37 13 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_f {
            bindings = <&kp LS(F)>;
            key-positions = <37 4 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_c {
            bindings = <&kp LS(C)>;
            key-positions = <37 16 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_k {
            bindings = <&kp LS(K)>;
            key-positions = <37 14 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_j {
            bindings = <&kp LS(J)>;
            key-positions = <37 13 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_upper_w {
            bindings = <&kp LS(W)>;
            key-positions = <37 13 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <2 15 37>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_colon {
            bindings = <&kp COLON>;
            key-positions = <37 1 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_period {
            bindings = <&kp PERIOD>;
            key-positions = <37 16 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <37 14 3>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_bang {
            bindings = <&kp EXCLAMATION>;
            key-positions = <37 15 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <37 13 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <38 1 2>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <13 14 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <2 3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_hash {
            bindings = <&kp HASH>;
            key-positions = <1 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <1 3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <15 13 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_carot {
            bindings = <&kp CARET>;
            key-positions = <1 15 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <16 2 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <1 16 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_pipe {
            bindings = <&kp PIPE>;
            key-positions = <2 15 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_tilde {
            bindings = <&kp TILDE>;
            key-positions = <16 3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <3 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <16 15 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <14 15 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_at {
            bindings = <&kp AT_SIGN>;
            key-positions = <13 16 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <2 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <16 14 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_plus {
            bindings = <&kp PLUS>;
            key-positions = <14 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_equal {
            bindings = <&kp EQUAL>;
            key-positions = <13 3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_and {
            bindings = <&kp AMPERSAND>;
            key-positions = <13 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_percent {
            bindings = <&kp PERCENT>;
            key-positions = <14 3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_backtick {
            bindings = <&kp GRAVE>;
            key-positions = <13 2 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_lessthan {
            bindings = <&kp LS(LESS_THAN)>;
            key-positions = <13 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_greaterthan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <1 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_openbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_closebrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <2 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_openbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <15 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_closebracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <3 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_openparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_closeparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_tab {
            bindings = <&kp TAB>;
            key-positions = <2 3 4>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <14 15 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_super {
            bindings = <&sk LEFT_GUI>;
            key-positions = <1 13>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <2 14>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_control {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <3 15>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_shift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <4 16>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_delete {
            bindings = <&kp DELETE>;
            key-positions = <2 3 4 38>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <2 3 4 37>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };

        left_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15 16 37>;
            layers = <7>;
            timeout-ms = <COMBO_TIMEOUT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | GAME |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q        &kp W        &kp E         &kp R         &kp T                    &kp Y                 &kp U         &kp I         &kp O        &kp P           &kp BSPC
&kp LCTRL       &hmt LGUI A  &hmt LALT S  &hmt LCTRL D  &hmt LSHFT F  &kp G                    &kp H                 &hmt RSHFT J  &hmt RCTRL K  &hmt RALT L  &hmt RGUI SEMI  &kp SQT
&hmt LSHFT ESC  &kp Z        &kp X        &kp C         &kp V         &kp B                    &kp N                 &kp M         &kp COMMA     &kp DOT      &kp FSLH        &kp RIGHT_SHIFT
                                          &kp LGUI      &mo 1         &hmt LEFT_SHIFT SPACE    &hmt RIGHT_SHIFT RET  &mo 2         &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1         &kp N2    &kp N3    &kp N4     &kp N5           &trans         &kp N7          &kp N8         &kp N9             &kp PLUS           &kp DEL
&trans  &kp PAGE_UP    &kp LEFT  &kp UP    &kp RIGHT  &kp PAGE_UP      &kp KP_DIVIDE  &hmt RSHIFT N4  &hmt RCTRL N5  &hmt RIGHT_ALT N6  &hmt RIGHT_GUI N0  &trans
&trans  &kp PAGE_DOWN  &kp HOME  &kp DOWN  &kp END    &kp PAGE_DOWN    &kp PERIOD     &kp N1          &kp N2         &kp N3             &kp KP_MINUS       &trans
                                 &trans    &trans     &trans           &trans         &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL              &kp AT                 &kp HASH          &kp DLLR           &kp PRCNT         &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR       &kp BSPC
&kp LCTRL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS         &kp PLUS   &trans    &trans           &kp TILDE  &kp PIPE       &trans
&trans     &kp LT                &kp GT                 &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE    &kp EQUAL  &trans    &trans           &kp GRAVE  &kp BACKSLASH  &trans
                                                        &trans            &trans             &trans            &trans     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &kp F11       &kp F12       &kp F13       &kp F14       &kp F15         &kp F16        &kp F17        &kp F18        &kp F19        &kp F20        &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6         &kp F7         &kp F8         &kp F9         &kp F10        &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR
                                    &trans        &trans        &trans          &trans         &trans         &trans
            >;
        };

        colemak_layer {
            bindings = <
&kp TAB         &kp Q        &kp W        &kp F         &kp P         &kp B                    &kp J                   &kp L         &kp U         &kp Y        &kp SEMI     &kp BSPC
&kp LCTRL       &hmt LGUI A  &hmt LALT R  &hmt LCTRL S  &hmt LSHFT T  &kp G                    &kp M                   &hmt RSHFT N  &hmt RCTRL E  &hmt RALT I  &hmt RGUI O  &kp APOS
&hmt LSHFT ESC  &kp Z        &kp X        &kp C         &kp D         &kp V                    &kp K                   &kp H         &kp COMMA     &kp DOT      &kp FSLH     &kp RIGHT_SHIFT
                                          &trans        &mo 1         &hmt LEFT_SHIFT SPACE    &hmt RIGHT_SHIFT ENTER  &mo 2         &trans
            >;
        };

        game_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U          &kp I          &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J          &kp K          &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M          &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LEFT_ALT  &mo 6  &kp SPACE    &kp ENTER  &kp RIGHT_GUI  &kp RIGHT_ALT
            >;
        };

        GAME_NUMBERS {
            bindings = <
&kp F14  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &none   &none   &none   &none   &none    &none
&kp F13  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &none   &none   &none   &none   &none    &none
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
                         &trans  &none   &trans    &none   &none   &none
            >;
        };

        CHORDS_LAYER {
            bindings = <
&none  &kp R  &kp S  &kp N  &kp I          &none        &none  &none  &none  &none  &none  &none
&none  &kp A  &kp O  &kp T  &kp E          &none        &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &none  &none
                     &none  &kp BACKSPACE  &kp SPACE    &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
